<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="437.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="7378"><g><title>ByteStream::read[abi:cxx11] (1 samples, 0.01%)</title><rect x="0.0000%" y="373" width="0.0136%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="0.0000%" y="357" width="0.0136%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="0.0000%" y="341" width="0.0136%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>StreamReassembler::push_substring (1 samples, 0.01%)</title><rect x="0.0136%" y="373" width="0.0136%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2636%" y="383.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="0.0136%" y="357" width="0.0136%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2636%" y="367.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="0.0136%" y="341" width="0.0136%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2636%" y="351.50"></text></g><g><title>TCPConnection::segment_received (1 samples, 0.01%)</title><rect x="0.0271%" y="373" width="0.0136%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2771%" y="383.50"></text></g><g><title>TCPSender::send_empty_segment (1 samples, 0.01%)</title><rect x="0.0271%" y="357" width="0.0136%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2771%" y="367.50"></text></g><g><title>TCPSender::ack_received (1 samples, 0.01%)</title><rect x="0.0407%" y="373" width="0.0136%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.2907%" y="383.50"></text></g><g><title>TCPSegment::length_in_sequence_space (1 samples, 0.01%)</title><rect x="0.0407%" y="357" width="0.0136%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.2907%" y="367.50"></text></g><g><title>TCPSender::fill_window (1 samples, 0.01%)</title><rect x="0.0542%" y="373" width="0.0136%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="1"/><text x="0.3042%" y="383.50"></text></g><g><title>TCPSegment::length_in_sequence_space (1 samples, 0.01%)</title><rect x="0.0542%" y="357" width="0.0136%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="0.3042%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.04%)</title><rect x="0.1220%" y="293" width="0.0407%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="3"/><text x="0.3720%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1491%" y="277" width="0.0136%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="1"/><text x="0.3991%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12 samples, 0.16%)</title><rect x="0.0949%" y="341" width="0.1626%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="12"/><text x="0.3449%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12 samples, 0.16%)</title><rect x="0.0949%" y="325" width="0.1626%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="12"/><text x="0.3449%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (11 samples, 0.15%)</title><rect x="0.1084%" y="309" width="0.1491%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="11"/><text x="0.3584%" y="319.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.09%)</title><rect x="0.1626%" y="293" width="0.0949%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="7"/><text x="0.4126%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.09%)</title><rect x="0.1626%" y="277" width="0.0949%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="7"/><text x="0.4126%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.09%)</title><rect x="0.1626%" y="261" width="0.0949%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="7"/><text x="0.4126%" y="271.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.09%)</title><rect x="0.1626%" y="245" width="0.0949%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="7"/><text x="0.4126%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.04%)</title><rect x="0.2169%" y="229" width="0.0407%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="3"/><text x="0.4669%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="0.2304%" y="213" width="0.0271%" height="15" fill="rgb(221,5,38)" fg:x="17" fg:w="2"/><text x="0.4804%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="0.2304%" y="197" width="0.0271%" height="15" fill="rgb(247,18,42)" fg:x="17" fg:w="2"/><text x="0.4804%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2440%" y="181" width="0.0136%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="1"/><text x="0.4940%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.22%)</title><rect x="0.0813%" y="357" width="0.2169%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="16"/><text x="0.3313%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="0.2575%" y="341" width="0.0407%" height="15" fill="rgb(225,111,53)" fg:x="19" fg:w="3"/><text x="0.5075%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="0.2711%" y="325" width="0.0271%" height="15" fill="rgb(238,160,17)" fg:x="20" fg:w="2"/><text x="0.5211%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="0.2711%" y="309" width="0.0271%" height="15" fill="rgb(214,148,48)" fg:x="20" fg:w="2"/><text x="0.5211%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2846%" y="293" width="0.0136%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="1"/><text x="0.5346%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18 samples, 0.24%)</title><rect x="0.0678%" y="373" width="0.2440%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="18"/><text x="0.3178%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2982%" y="357" width="0.0136%" height="15" fill="rgb(229,88,8)" fg:x="22" fg:w="1"/><text x="0.5482%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2982%" y="341" width="0.0136%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="1"/><text x="0.5482%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="0.3117%" y="357" width="0.0407%" height="15" fill="rgb(254,191,54)" fg:x="23" fg:w="3"/><text x="0.5617%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="0.3117%" y="341" width="0.0407%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="3"/><text x="0.5617%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3388%" y="325" width="0.0136%" height="15" fill="rgb(233,36,39)" fg:x="25" fg:w="1"/><text x="0.5888%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="0.3117%" y="373" width="0.0542%" height="15" fill="rgb(226,3,54)" fg:x="23" fg:w="4"/><text x="0.5617%" y="383.50"></text></g><g><title>brk (1 samples, 0.01%)</title><rect x="0.3524%" y="357" width="0.0136%" height="15" fill="rgb(245,192,40)" fg:x="26" fg:w="1"/><text x="0.6024%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3524%" y="341" width="0.0136%" height="15" fill="rgb(238,167,29)" fg:x="26" fg:w="1"/><text x="0.6024%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3524%" y="325" width="0.0136%" height="15" fill="rgb(232,182,51)" fg:x="26" fg:w="1"/><text x="0.6024%" y="335.50"></text></g><g><title>TCPConnection::~TCPConnection (1 samples, 0.01%)</title><rect x="0.6099%" y="293" width="0.0136%" height="15" fill="rgb(231,60,39)" fg:x="45" fg:w="1"/><text x="0.8599%" y="303.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="0.6099%" y="277" width="0.0136%" height="15" fill="rgb(208,69,12)" fg:x="45" fg:w="1"/><text x="0.8599%" y="287.50"></text></g><g><title>[libc.so.6] (254 samples, 3.44%)</title><rect x="0.6235%" y="293" width="3.4427%" height="15" fill="rgb(235,93,37)" fg:x="46" fg:w="254"/><text x="0.8735%" y="303.50">[li..</text></g><g><title>[unknown] (77 samples, 1.04%)</title><rect x="3.0225%" y="277" width="1.0436%" height="15" fill="rgb(213,116,39)" fg:x="223" fg:w="77"/><text x="3.2725%" y="287.50"></text></g><g><title>[unknown] (14 samples, 0.19%)</title><rect x="3.8764%" y="261" width="0.1898%" height="15" fill="rgb(222,207,29)" fg:x="286" fg:w="14"/><text x="4.1264%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.15%)</title><rect x="3.9171%" y="245" width="0.1491%" height="15" fill="rgb(206,96,30)" fg:x="289" fg:w="11"/><text x="4.1671%" y="255.50"></text></g><g><title>[unknown] (10 samples, 0.14%)</title><rect x="3.9306%" y="229" width="0.1355%" height="15" fill="rgb(218,138,4)" fg:x="290" fg:w="10"/><text x="4.1806%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.0526%" y="213" width="0.0136%" height="15" fill="rgb(250,191,14)" fg:x="299" fg:w="1"/><text x="4.3026%" y="223.50"></text></g><g><title>[libc.so.6] (18 samples, 0.24%)</title><rect x="4.1068%" y="245" width="0.2440%" height="15" fill="rgb(239,60,40)" fg:x="303" fg:w="18"/><text x="4.3568%" y="255.50"></text></g><g><title>[unknown] (14 samples, 0.19%)</title><rect x="4.1610%" y="229" width="0.1898%" height="15" fill="rgb(206,27,48)" fg:x="307" fg:w="14"/><text x="4.4110%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="4.2966%" y="213" width="0.0542%" height="15" fill="rgb(225,35,8)" fg:x="317" fg:w="4"/><text x="4.5466%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="4.3101%" y="197" width="0.0407%" height="15" fill="rgb(250,213,24)" fg:x="318" fg:w="3"/><text x="4.5601%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="4.3237%" y="181" width="0.0271%" height="15" fill="rgb(247,123,22)" fg:x="319" fg:w="2"/><text x="4.5737%" y="191.50"></text></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="4.3508%" y="245" width="0.0136%" height="15" fill="rgb(231,138,38)" fg:x="321" fg:w="1"/><text x="4.6008%" y="255.50"></text></g><g><title>operator new (14 samples, 0.19%)</title><rect x="4.3779%" y="213" width="0.1898%" height="15" fill="rgb(231,145,46)" fg:x="323" fg:w="14"/><text x="4.6279%" y="223.50"></text></g><g><title>malloc (14 samples, 0.19%)</title><rect x="4.3779%" y="197" width="0.1898%" height="15" fill="rgb(251,118,11)" fg:x="323" fg:w="14"/><text x="4.6279%" y="207.50"></text></g><g><title>[libc.so.6] (14 samples, 0.19%)</title><rect x="4.3779%" y="181" width="0.1898%" height="15" fill="rgb(217,147,25)" fg:x="323" fg:w="14"/><text x="4.6279%" y="191.50"></text></g><g><title>[libc.so.6] (8 samples, 0.11%)</title><rect x="4.4592%" y="165" width="0.1084%" height="15" fill="rgb(247,81,37)" fg:x="329" fg:w="8"/><text x="4.7092%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="4.5676%" y="213" width="0.0136%" height="15" fill="rgb(209,12,38)" fg:x="337" fg:w="1"/><text x="4.8176%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.01%)</title><rect x="4.5676%" y="197" width="0.0136%" height="15" fill="rgb(227,1,9)" fg:x="337" fg:w="1"/><text x="4.8176%" y="207.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="4.5676%" y="181" width="0.0136%" height="15" fill="rgb(248,47,43)" fg:x="337" fg:w="1"/><text x="4.8176%" y="191.50"></text></g><g><title>std::__new_allocator&lt;char&gt;::deallocate (1 samples, 0.01%)</title><rect x="4.5676%" y="165" width="0.0136%" height="15" fill="rgb(221,10,30)" fg:x="337" fg:w="1"/><text x="4.8176%" y="175.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="4.5676%" y="149" width="0.0136%" height="15" fill="rgb(210,229,1)" fg:x="337" fg:w="1"/><text x="4.8176%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="4.5676%" y="133" width="0.0136%" height="15" fill="rgb(222,148,37)" fg:x="337" fg:w="1"/><text x="4.8176%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (33 samples, 0.45%)</title><rect x="4.3643%" y="229" width="0.4473%" height="15" fill="rgb(234,67,33)" fg:x="322" fg:w="33"/><text x="4.6143%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (17 samples, 0.23%)</title><rect x="4.5812%" y="213" width="0.2304%" height="15" fill="rgb(247,98,35)" fg:x="338" fg:w="17"/><text x="4.8312%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (17 samples, 0.23%)</title><rect x="4.5812%" y="197" width="0.2304%" height="15" fill="rgb(247,138,52)" fg:x="338" fg:w="17"/><text x="4.8312%" y="207.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (17 samples, 0.23%)</title><rect x="4.5812%" y="181" width="0.2304%" height="15" fill="rgb(213,79,30)" fg:x="338" fg:w="17"/><text x="4.8312%" y="191.50"></text></g><g><title>[libc.so.6] (17 samples, 0.23%)</title><rect x="4.5812%" y="165" width="0.2304%" height="15" fill="rgb(246,177,23)" fg:x="338" fg:w="17"/><text x="4.8312%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="4.7709%" y="149" width="0.0407%" height="15" fill="rgb(230,62,27)" fg:x="352" fg:w="3"/><text x="5.0209%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="4.7709%" y="133" width="0.0407%" height="15" fill="rgb(216,154,8)" fg:x="352" fg:w="3"/><text x="5.0209%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="4.7709%" y="117" width="0.0407%" height="15" fill="rgb(244,35,45)" fg:x="352" fg:w="3"/><text x="5.0209%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="4.7709%" y="101" width="0.0407%" height="15" fill="rgb(251,115,12)" fg:x="352" fg:w="3"/><text x="5.0209%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.7980%" y="85" width="0.0136%" height="15" fill="rgb(240,54,50)" fg:x="354" fg:w="1"/><text x="5.0480%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.7980%" y="69" width="0.0136%" height="15" fill="rgb(233,84,52)" fg:x="354" fg:w="1"/><text x="5.0480%" y="79.50"></text></g><g><title>ByteStream::peek_output[abi:cxx11] (58 samples, 0.79%)</title><rect x="4.0933%" y="261" width="0.7861%" height="15" fill="rgb(207,117,47)" fg:x="302" fg:w="58"/><text x="4.3433%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (38 samples, 0.52%)</title><rect x="4.3643%" y="245" width="0.5150%" height="15" fill="rgb(249,43,39)" fg:x="322" fg:w="38"/><text x="4.6143%" y="255.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5 samples, 0.07%)</title><rect x="4.8116%" y="229" width="0.0678%" height="15" fill="rgb(209,38,44)" fg:x="355" fg:w="5"/><text x="5.0616%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5 samples, 0.07%)</title><rect x="4.8116%" y="213" width="0.0678%" height="15" fill="rgb(236,212,23)" fg:x="355" fg:w="5"/><text x="5.0616%" y="223.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (5 samples, 0.07%)</title><rect x="4.8116%" y="197" width="0.0678%" height="15" fill="rgb(242,79,21)" fg:x="355" fg:w="5"/><text x="5.0616%" y="207.50"></text></g><g><title>[libc.so.6] (5 samples, 0.07%)</title><rect x="4.8116%" y="181" width="0.0678%" height="15" fill="rgb(211,96,35)" fg:x="355" fg:w="5"/><text x="5.0616%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.8658%" y="165" width="0.0136%" height="15" fill="rgb(253,215,40)" fg:x="359" fg:w="1"/><text x="5.1158%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.8658%" y="149" width="0.0136%" height="15" fill="rgb(211,81,21)" fg:x="359" fg:w="1"/><text x="5.1158%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.8658%" y="133" width="0.0136%" height="15" fill="rgb(208,190,38)" fg:x="359" fg:w="1"/><text x="5.1158%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.8658%" y="117" width="0.0136%" height="15" fill="rgb(235,213,38)" fg:x="359" fg:w="1"/><text x="5.1158%" y="127.50"></text></g><g><title>[libc.so.6] (7 samples, 0.09%)</title><rect x="4.8929%" y="245" width="0.0949%" height="15" fill="rgb(237,122,38)" fg:x="361" fg:w="7"/><text x="5.1429%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="5.0149%" y="213" width="0.0136%" height="15" fill="rgb(244,218,35)" fg:x="370" fg:w="1"/><text x="5.2649%" y="223.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="4.9878%" y="245" width="0.0542%" height="15" fill="rgb(240,68,47)" fg:x="368" fg:w="4"/><text x="5.2378%" y="255.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="4.9878%" y="229" width="0.0542%" height="15" fill="rgb(210,16,53)" fg:x="368" fg:w="4"/><text x="5.2378%" y="239.50"></text></g><g><title>__default_morecore (1 samples, 0.01%)</title><rect x="5.0285%" y="213" width="0.0136%" height="15" fill="rgb(235,124,12)" fg:x="371" fg:w="1"/><text x="5.2785%" y="223.50"></text></g><g><title>__sbrk (1 samples, 0.01%)</title><rect x="5.0285%" y="197" width="0.0136%" height="15" fill="rgb(224,169,11)" fg:x="371" fg:w="1"/><text x="5.2785%" y="207.50"></text></g><g><title>brk (1 samples, 0.01%)</title><rect x="5.0285%" y="181" width="0.0136%" height="15" fill="rgb(250,166,2)" fg:x="371" fg:w="1"/><text x="5.2785%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.0285%" y="165" width="0.0136%" height="15" fill="rgb(242,216,29)" fg:x="371" fg:w="1"/><text x="5.2785%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="5.0285%" y="149" width="0.0136%" height="15" fill="rgb(230,116,27)" fg:x="371" fg:w="1"/><text x="5.2785%" y="159.50"></text></g><g><title>ByteStream::pop_output (17 samples, 0.23%)</title><rect x="4.8794%" y="261" width="0.2304%" height="15" fill="rgb(228,99,48)" fg:x="360" fg:w="17"/><text x="5.1294%" y="271.50"></text></g><g><title>operator new (5 samples, 0.07%)</title><rect x="5.0420%" y="245" width="0.0678%" height="15" fill="rgb(253,11,6)" fg:x="372" fg:w="5"/><text x="5.2920%" y="255.50"></text></g><g><title>malloc (5 samples, 0.07%)</title><rect x="5.0420%" y="229" width="0.0678%" height="15" fill="rgb(247,143,39)" fg:x="372" fg:w="5"/><text x="5.2920%" y="239.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="5.0827%" y="213" width="0.0271%" height="15" fill="rgb(236,97,10)" fg:x="375" fg:w="2"/><text x="5.3327%" y="223.50"></text></g><g><title>[libc.so.6] (11 samples, 0.15%)</title><rect x="5.1098%" y="261" width="0.1491%" height="15" fill="rgb(233,208,19)" fg:x="377" fg:w="11"/><text x="5.3598%" y="271.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="5.2589%" y="261" width="0.0136%" height="15" fill="rgb(216,164,2)" fg:x="388" fg:w="1"/><text x="5.5089%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="5.2589%" y="245" width="0.0136%" height="15" fill="rgb(220,129,5)" fg:x="388" fg:w="1"/><text x="5.5089%" y="255.50"></text></g><g><title>ByteStream::read[abi:cxx11] (88 samples, 1.19%)</title><rect x="4.0933%" y="277" width="1.1927%" height="15" fill="rgb(242,17,10)" fg:x="302" fg:w="88"/><text x="4.3433%" y="287.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="5.2724%" y="261" width="0.0136%" height="15" fill="rgb(242,107,0)" fg:x="389" fg:w="1"/><text x="5.5224%" y="271.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="5.2724%" y="245" width="0.0136%" height="15" fill="rgb(251,28,31)" fg:x="389" fg:w="1"/><text x="5.5224%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="5.2724%" y="229" width="0.0136%" height="15" fill="rgb(233,223,10)" fg:x="389" fg:w="1"/><text x="5.5224%" y="239.50"></text></g><g><title>ByteStream::bytes_written (1 samples, 0.01%)</title><rect x="5.2860%" y="245" width="0.0136%" height="15" fill="rgb(215,21,27)" fg:x="390" fg:w="1"/><text x="5.5360%" y="255.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="5.2860%" y="229" width="0.0136%" height="15" fill="rgb(232,23,21)" fg:x="390" fg:w="1"/><text x="5.5360%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="5.2860%" y="213" width="0.0136%" height="15" fill="rgb(244,5,23)" fg:x="390" fg:w="1"/><text x="5.5360%" y="223.50"></text></g><g><title>TCPReceiver::ackno (2 samples, 0.03%)</title><rect x="5.2860%" y="261" width="0.0271%" height="15" fill="rgb(226,81,46)" fg:x="390" fg:w="2"/><text x="5.5360%" y="271.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="5.2995%" y="245" width="0.0136%" height="15" fill="rgb(247,70,30)" fg:x="391" fg:w="1"/><text x="5.5495%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="5.2995%" y="229" width="0.0136%" height="15" fill="rgb(212,68,19)" fg:x="391" fg:w="1"/><text x="5.5495%" y="239.50"></text></g><g><title>TCPConnection::send_segments (3 samples, 0.04%)</title><rect x="5.2860%" y="277" width="0.0407%" height="15" fill="rgb(240,187,13)" fg:x="390" fg:w="3"/><text x="5.5360%" y="287.50"></text></g><g><title>TCPReceiver::window_size (1 samples, 0.01%)</title><rect x="5.3131%" y="261" width="0.0136%" height="15" fill="rgb(223,113,26)" fg:x="392" fg:w="1"/><text x="5.5631%" y="271.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="5.3131%" y="245" width="0.0136%" height="15" fill="rgb(206,192,2)" fg:x="392" fg:w="1"/><text x="5.5631%" y="255.50"></text></g><g><title>ByteStream::write (7 samples, 0.09%)</title><rect x="5.3266%" y="261" width="0.0949%" height="15" fill="rgb(241,108,4)" fg:x="393" fg:w="7"/><text x="5.5766%" y="271.50"></text></g><g><title>[libc.so.6] (7 samples, 0.09%)</title><rect x="5.3266%" y="245" width="0.0949%" height="15" fill="rgb(247,173,49)" fg:x="393" fg:w="7"/><text x="5.5766%" y="255.50"></text></g><g><title>TCPConnection::write (8 samples, 0.11%)</title><rect x="5.3266%" y="277" width="0.1084%" height="15" fill="rgb(224,114,35)" fg:x="393" fg:w="8"/><text x="5.5766%" y="287.50"></text></g><g><title>TCPConnection::send_segments (1 samples, 0.01%)</title><rect x="5.4215%" y="261" width="0.0136%" height="15" fill="rgb(245,159,27)" fg:x="400" fg:w="1"/><text x="5.6715%" y="271.50"></text></g><g><title>ByteStream::eof (1 samples, 0.01%)</title><rect x="5.4215%" y="245" width="0.0136%" height="15" fill="rgb(245,172,44)" fg:x="400" fg:w="1"/><text x="5.6715%" y="255.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="5.4215%" y="229" width="0.0136%" height="15" fill="rgb(236,23,11)" fg:x="400" fg:w="1"/><text x="5.6715%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="5.4215%" y="213" width="0.0136%" height="15" fill="rgb(205,117,38)" fg:x="400" fg:w="1"/><text x="5.6715%" y="223.50"></text></g><g><title>[libc.so.6] (48 samples, 0.65%)</title><rect x="5.4351%" y="277" width="0.6506%" height="15" fill="rgb(237,72,25)" fg:x="401" fg:w="48"/><text x="5.6851%" y="287.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="6.0857%" y="277" width="0.0136%" height="15" fill="rgb(244,70,9)" fg:x="449" fg:w="1"/><text x="6.3357%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="6.0857%" y="261" width="0.0136%" height="15" fill="rgb(217,125,39)" fg:x="449" fg:w="1"/><text x="6.3357%" y="271.50"></text></g><g><title>ByteStream::bytes_written (11 samples, 0.15%)</title><rect x="6.2483%" y="245" width="0.1491%" height="15" fill="rgb(235,36,10)" fg:x="461" fg:w="11"/><text x="6.4983%" y="255.50"></text></g><g><title>_mcount (9 samples, 0.12%)</title><rect x="6.2754%" y="229" width="0.1220%" height="15" fill="rgb(251,123,47)" fg:x="463" fg:w="9"/><text x="6.5254%" y="239.50"></text></g><g><title>[libc.so.6] (8 samples, 0.11%)</title><rect x="6.2890%" y="213" width="0.1084%" height="15" fill="rgb(221,13,13)" fg:x="464" fg:w="8"/><text x="6.5390%" y="223.50"></text></g><g><title>ByteStream::eof (11 samples, 0.15%)</title><rect x="6.3974%" y="245" width="0.1491%" height="15" fill="rgb(238,131,9)" fg:x="472" fg:w="11"/><text x="6.6474%" y="255.50"></text></g><g><title>_mcount (10 samples, 0.14%)</title><rect x="6.4110%" y="229" width="0.1355%" height="15" fill="rgb(211,50,8)" fg:x="473" fg:w="10"/><text x="6.6610%" y="239.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="6.4652%" y="213" width="0.0813%" height="15" fill="rgb(245,182,24)" fg:x="477" fg:w="6"/><text x="6.7152%" y="223.50"></text></g><g><title>ByteStream::input_ended (1 samples, 0.01%)</title><rect x="6.5465%" y="245" width="0.0136%" height="15" fill="rgb(242,14,37)" fg:x="483" fg:w="1"/><text x="6.7965%" y="255.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="6.5465%" y="229" width="0.0136%" height="15" fill="rgb(246,228,12)" fg:x="483" fg:w="1"/><text x="6.7965%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="6.5465%" y="213" width="0.0136%" height="15" fill="rgb(213,55,15)" fg:x="483" fg:w="1"/><text x="6.7965%" y="223.50"></text></g><g><title>ByteStream::end_input (4 samples, 0.05%)</title><rect x="6.6143%" y="229" width="0.0542%" height="15" fill="rgb(209,9,3)" fg:x="488" fg:w="4"/><text x="6.8643%" y="239.50"></text></g><g><title>_mcount (4 samples, 0.05%)</title><rect x="6.6143%" y="213" width="0.0542%" height="15" fill="rgb(230,59,30)" fg:x="488" fg:w="4"/><text x="6.8643%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="6.6143%" y="197" width="0.0542%" height="15" fill="rgb(209,121,21)" fg:x="488" fg:w="4"/><text x="6.8643%" y="207.50"></text></g><g><title>ByteStream::buffer_size (4 samples, 0.05%)</title><rect x="6.8582%" y="213" width="0.0542%" height="15" fill="rgb(220,109,13)" fg:x="506" fg:w="4"/><text x="7.1082%" y="223.50"></text></g><g><title>_mcount (3 samples, 0.04%)</title><rect x="6.8718%" y="197" width="0.0407%" height="15" fill="rgb(232,18,1)" fg:x="507" fg:w="3"/><text x="7.1218%" y="207.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="6.8718%" y="181" width="0.0407%" height="15" fill="rgb(215,41,42)" fg:x="507" fg:w="3"/><text x="7.1218%" y="191.50"></text></g><g><title>ByteStream::bytes_read (7 samples, 0.09%)</title><rect x="6.9124%" y="213" width="0.0949%" height="15" fill="rgb(224,123,36)" fg:x="510" fg:w="7"/><text x="7.1624%" y="223.50"></text></g><g><title>_mcount (7 samples, 0.09%)</title><rect x="6.9124%" y="197" width="0.0949%" height="15" fill="rgb(240,125,3)" fg:x="510" fg:w="7"/><text x="7.1624%" y="207.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="6.9260%" y="181" width="0.0813%" height="15" fill="rgb(205,98,50)" fg:x="511" fg:w="6"/><text x="7.1760%" y="191.50"></text></g><g><title>ByteStream::bytes_written (8 samples, 0.11%)</title><rect x="7.0073%" y="213" width="0.1084%" height="15" fill="rgb(205,185,37)" fg:x="517" fg:w="8"/><text x="7.2573%" y="223.50"></text></g><g><title>_mcount (8 samples, 0.11%)</title><rect x="7.0073%" y="197" width="0.1084%" height="15" fill="rgb(238,207,15)" fg:x="517" fg:w="8"/><text x="7.2573%" y="207.50"></text></g><g><title>[libc.so.6] (5 samples, 0.07%)</title><rect x="7.0480%" y="181" width="0.0678%" height="15" fill="rgb(213,199,42)" fg:x="520" fg:w="5"/><text x="7.2980%" y="191.50"></text></g><g><title>[libc.so.6] (9 samples, 0.12%)</title><rect x="7.1293%" y="197" width="0.1220%" height="15" fill="rgb(235,201,11)" fg:x="526" fg:w="9"/><text x="7.3793%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2377%" y="181" width="0.0136%" height="15" fill="rgb(207,46,11)" fg:x="534" fg:w="1"/><text x="7.4877%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2377%" y="165" width="0.0136%" height="15" fill="rgb(241,35,35)" fg:x="534" fg:w="1"/><text x="7.4877%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2377%" y="149" width="0.0136%" height="15" fill="rgb(243,32,47)" fg:x="534" fg:w="1"/><text x="7.4877%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="7.2377%" y="133" width="0.0136%" height="15" fill="rgb(247,202,23)" fg:x="534" fg:w="1"/><text x="7.4877%" y="143.50"></text></g><g><title>_mcount (2 samples, 0.03%)</title><rect x="7.2513%" y="197" width="0.0271%" height="15" fill="rgb(219,102,11)" fg:x="535" fg:w="2"/><text x="7.5013%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="7.2648%" y="181" width="0.0136%" height="15" fill="rgb(243,110,44)" fg:x="536" fg:w="1"/><text x="7.5148%" y="191.50"></text></g><g><title>operator new (5 samples, 0.07%)</title><rect x="7.2784%" y="197" width="0.0678%" height="15" fill="rgb(222,74,54)" fg:x="537" fg:w="5"/><text x="7.5284%" y="207.50"></text></g><g><title>malloc (5 samples, 0.07%)</title><rect x="7.2784%" y="181" width="0.0678%" height="15" fill="rgb(216,99,12)" fg:x="537" fg:w="5"/><text x="7.5284%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="7.3326%" y="165" width="0.0136%" height="15" fill="rgb(226,22,26)" fg:x="541" fg:w="1"/><text x="7.5826%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="7.3326%" y="149" width="0.0136%" height="15" fill="rgb(217,163,10)" fg:x="541" fg:w="1"/><text x="7.5826%" y="159.50"></text></g><g><title>ByteStream::write (19 samples, 0.26%)</title><rect x="7.1157%" y="213" width="0.2575%" height="15" fill="rgb(213,25,53)" fg:x="525" fg:w="19"/><text x="7.3657%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.03%)</title><rect x="7.3462%" y="197" width="0.0271%" height="15" fill="rgb(252,105,26)" fg:x="542" fg:w="2"/><text x="7.5962%" y="207.50"></text></g><g><title>[libc.so.6] (25 samples, 0.34%)</title><rect x="7.3733%" y="213" width="0.3388%" height="15" fill="rgb(220,39,43)" fg:x="544" fg:w="25"/><text x="7.6233%" y="223.50"></text></g><g><title>_mcount (11 samples, 0.15%)</title><rect x="7.7121%" y="213" width="0.1491%" height="15" fill="rgb(229,68,48)" fg:x="569" fg:w="11"/><text x="7.9621%" y="223.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="7.7799%" y="197" width="0.0813%" height="15" fill="rgb(252,8,32)" fg:x="574" fg:w="6"/><text x="8.0299%" y="207.50"></text></g><g><title>cfree (12 samples, 0.16%)</title><rect x="7.8612%" y="213" width="0.1626%" height="15" fill="rgb(223,20,43)" fg:x="580" fg:w="12"/><text x="8.1112%" y="223.50"></text></g><g><title>[libc.so.6] (9 samples, 0.12%)</title><rect x="7.9019%" y="197" width="0.1220%" height="15" fill="rgb(229,81,49)" fg:x="583" fg:w="9"/><text x="8.1519%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="8.0103%" y="181" width="0.0136%" height="15" fill="rgb(236,28,36)" fg:x="591" fg:w="1"/><text x="8.2603%" y="191.50"></text></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="8.0239%" y="213" width="0.0136%" height="15" fill="rgb(249,185,26)" fg:x="592" fg:w="1"/><text x="8.2739%" y="223.50"></text></g><g><title>operator delete (1 samples, 0.01%)</title><rect x="8.0374%" y="213" width="0.0136%" height="15" fill="rgb(249,174,33)" fg:x="593" fg:w="1"/><text x="8.2874%" y="223.50"></text></g><g><title>operator new (30 samples, 0.41%)</title><rect x="8.0510%" y="213" width="0.4066%" height="15" fill="rgb(233,201,37)" fg:x="594" fg:w="30"/><text x="8.3010%" y="223.50"></text></g><g><title>malloc (26 samples, 0.35%)</title><rect x="8.1052%" y="197" width="0.3524%" height="15" fill="rgb(221,78,26)" fg:x="598" fg:w="26"/><text x="8.3552%" y="207.50"></text></g><g><title>[libc.so.6] (21 samples, 0.28%)</title><rect x="8.1729%" y="181" width="0.2846%" height="15" fill="rgb(250,127,30)" fg:x="603" fg:w="21"/><text x="8.4229%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="8.4305%" y="165" width="0.0271%" height="15" fill="rgb(230,49,44)" fg:x="622" fg:w="2"/><text x="8.6805%" y="175.50"></text></g><g><title>operator new (6 samples, 0.08%)</title><rect x="8.4847%" y="181" width="0.0813%" height="15" fill="rgb(229,67,23)" fg:x="626" fg:w="6"/><text x="8.7347%" y="191.50"></text></g><g><title>malloc (5 samples, 0.07%)</title><rect x="8.4982%" y="165" width="0.0678%" height="15" fill="rgb(249,83,47)" fg:x="627" fg:w="5"/><text x="8.7482%" y="175.50"></text></g><g><title>[libc.so.6] (5 samples, 0.07%)</title><rect x="8.4982%" y="149" width="0.0678%" height="15" fill="rgb(215,43,3)" fg:x="627" fg:w="5"/><text x="8.7482%" y="159.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="8.5118%" y="133" width="0.0542%" height="15" fill="rgb(238,154,13)" fg:x="628" fg:w="4"/><text x="8.7618%" y="143.50"></text></g><g><title>__default_morecore (1 samples, 0.01%)</title><rect x="8.5525%" y="117" width="0.0136%" height="15" fill="rgb(219,56,2)" fg:x="631" fg:w="1"/><text x="8.8025%" y="127.50"></text></g><g><title>__sbrk (1 samples, 0.01%)</title><rect x="8.5525%" y="101" width="0.0136%" height="15" fill="rgb(233,0,4)" fg:x="631" fg:w="1"/><text x="8.8025%" y="111.50"></text></g><g><title>brk (1 samples, 0.01%)</title><rect x="8.5525%" y="85" width="0.0136%" height="15" fill="rgb(235,30,7)" fg:x="631" fg:w="1"/><text x="8.8025%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.5525%" y="69" width="0.0136%" height="15" fill="rgb(250,79,13)" fg:x="631" fg:w="1"/><text x="8.8025%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.5525%" y="53" width="0.0136%" height="15" fill="rgb(211,146,34)" fg:x="631" fg:w="1"/><text x="8.8025%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.5525%" y="37" width="0.0136%" height="15" fill="rgb(228,22,38)" fg:x="631" fg:w="1"/><text x="8.8025%" y="47.50"></text></g><g><title>[libc.so.6] (13 samples, 0.18%)</title><rect x="8.5660%" y="133" width="0.1762%" height="15" fill="rgb(235,168,5)" fg:x="632" fg:w="13"/><text x="8.8160%" y="143.50"></text></g><g><title>[unknown] (8 samples, 0.11%)</title><rect x="8.6338%" y="117" width="0.1084%" height="15" fill="rgb(221,155,16)" fg:x="637" fg:w="8"/><text x="8.8838%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.07%)</title><rect x="8.6744%" y="101" width="0.0678%" height="15" fill="rgb(215,215,53)" fg:x="640" fg:w="5"/><text x="8.9244%" y="111.50"></text></g><g><title>[unknown] (5 samples, 0.07%)</title><rect x="8.6744%" y="85" width="0.0678%" height="15" fill="rgb(223,4,10)" fg:x="640" fg:w="5"/><text x="8.9244%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.07%)</title><rect x="8.6744%" y="69" width="0.0678%" height="15" fill="rgb(234,103,6)" fg:x="640" fg:w="5"/><text x="8.9244%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="8.7151%" y="53" width="0.0271%" height="15" fill="rgb(227,97,0)" fg:x="643" fg:w="2"/><text x="8.9651%" y="63.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14 samples, 0.19%)</title><rect x="8.5660%" y="181" width="0.1898%" height="15" fill="rgb(234,150,53)" fg:x="632" fg:w="14"/><text x="8.8160%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14 samples, 0.19%)</title><rect x="8.5660%" y="165" width="0.1898%" height="15" fill="rgb(228,201,54)" fg:x="632" fg:w="14"/><text x="8.8160%" y="175.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (14 samples, 0.19%)</title><rect x="8.5660%" y="149" width="0.1898%" height="15" fill="rgb(222,22,37)" fg:x="632" fg:w="14"/><text x="8.8160%" y="159.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="8.7422%" y="133" width="0.0136%" height="15" fill="rgb(237,53,32)" fg:x="645" fg:w="1"/><text x="8.9922%" y="143.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="8.7422%" y="117" width="0.0136%" height="15" fill="rgb(233,25,53)" fg:x="645" fg:w="1"/><text x="8.9922%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="8.7422%" y="101" width="0.0136%" height="15" fill="rgb(210,40,34)" fg:x="645" fg:w="1"/><text x="8.9922%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="8.7422%" y="85" width="0.0136%" height="15" fill="rgb(241,220,44)" fg:x="645" fg:w="1"/><text x="8.9922%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.7422%" y="69" width="0.0136%" height="15" fill="rgb(235,28,35)" fg:x="645" fg:w="1"/><text x="8.9922%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.7422%" y="53" width="0.0136%" height="15" fill="rgb(210,56,17)" fg:x="645" fg:w="1"/><text x="8.9922%" y="63.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (23 samples, 0.31%)</title><rect x="8.4576%" y="197" width="0.3117%" height="15" fill="rgb(224,130,29)" fg:x="624" fg:w="23"/><text x="8.7076%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.01%)</title><rect x="8.7558%" y="181" width="0.0136%" height="15" fill="rgb(235,212,8)" fg:x="646" fg:w="1"/><text x="9.0058%" y="191.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (35 samples, 0.47%)</title><rect x="8.4576%" y="213" width="0.4744%" height="15" fill="rgb(223,33,50)" fg:x="624" fg:w="35"/><text x="8.7076%" y="223.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (12 samples, 0.16%)</title><rect x="8.7693%" y="197" width="0.1626%" height="15" fill="rgb(219,149,13)" fg:x="647" fg:w="12"/><text x="9.0193%" y="207.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (12 samples, 0.16%)</title><rect x="8.7693%" y="181" width="0.1626%" height="15" fill="rgb(250,156,29)" fg:x="647" fg:w="12"/><text x="9.0193%" y="191.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (12 samples, 0.16%)</title><rect x="8.7693%" y="165" width="0.1626%" height="15" fill="rgb(216,193,19)" fg:x="647" fg:w="12"/><text x="9.0193%" y="175.50"></text></g><g><title>[libc.so.6] (12 samples, 0.16%)</title><rect x="8.7693%" y="149" width="0.1626%" height="15" fill="rgb(216,135,14)" fg:x="647" fg:w="12"/><text x="9.0193%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.07%)</title><rect x="8.8642%" y="133" width="0.0678%" height="15" fill="rgb(241,47,5)" fg:x="654" fg:w="5"/><text x="9.1142%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8913%" y="117" width="0.0407%" height="15" fill="rgb(233,42,35)" fg:x="656" fg:w="3"/><text x="9.1413%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="8.8913%" y="101" width="0.0407%" height="15" fill="rgb(231,13,6)" fg:x="656" fg:w="3"/><text x="9.1413%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.9184%" y="85" width="0.0136%" height="15" fill="rgb(207,181,40)" fg:x="658" fg:w="1"/><text x="9.1684%" y="95.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="8.9320%" y="213" width="0.0136%" height="15" fill="rgb(254,173,49)" fg:x="659" fg:w="1"/><text x="9.1820%" y="223.50"></text></g><g><title>std::__detail::_List_node_base::_M_hook (1 samples, 0.01%)</title><rect x="8.9455%" y="213" width="0.0136%" height="15" fill="rgb(221,1,38)" fg:x="660" fg:w="1"/><text x="9.1955%" y="223.50"></text></g><g><title>StreamReassembler::push_substring (170 samples, 2.30%)</title><rect x="6.6685%" y="229" width="2.3041%" height="15" fill="rgb(206,124,46)" fg:x="492" fg:w="170"/><text x="6.9185%" y="239.50">S..</text></g><g><title>std::__detail::_List_node_base::_M_unhook (1 samples, 0.01%)</title><rect x="8.9591%" y="213" width="0.0136%" height="15" fill="rgb(249,21,11)" fg:x="661" fg:w="1"/><text x="9.2091%" y="223.50"></text></g><g><title>StreamReassembler::unassembled_bytes (6 samples, 0.08%)</title><rect x="8.9726%" y="229" width="0.0813%" height="15" fill="rgb(222,201,40)" fg:x="662" fg:w="6"/><text x="9.2226%" y="239.50"></text></g><g><title>_mcount (6 samples, 0.08%)</title><rect x="8.9726%" y="213" width="0.0813%" height="15" fill="rgb(235,61,29)" fg:x="662" fg:w="6"/><text x="9.2226%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="8.9997%" y="197" width="0.0542%" height="15" fill="rgb(219,207,3)" fg:x="664" fg:w="4"/><text x="9.2497%" y="207.50"></text></g><g><title>[libc.so.6] (8 samples, 0.11%)</title><rect x="9.0539%" y="229" width="0.1084%" height="15" fill="rgb(222,56,46)" fg:x="668" fg:w="8"/><text x="9.3039%" y="239.50"></text></g><g><title>_mcount (9 samples, 0.12%)</title><rect x="9.1624%" y="229" width="0.1220%" height="15" fill="rgb(239,76,54)" fg:x="676" fg:w="9"/><text x="9.4124%" y="239.50"></text></g><g><title>[libc.so.6] (9 samples, 0.12%)</title><rect x="9.1624%" y="213" width="0.1220%" height="15" fill="rgb(231,124,27)" fg:x="676" fg:w="9"/><text x="9.4124%" y="223.50"></text></g><g><title>cfree (9 samples, 0.12%)</title><rect x="9.2844%" y="229" width="0.1220%" height="15" fill="rgb(249,195,6)" fg:x="685" fg:w="9"/><text x="9.5344%" y="239.50"></text></g><g><title>[libc.so.6] (5 samples, 0.07%)</title><rect x="9.3386%" y="213" width="0.0678%" height="15" fill="rgb(237,174,47)" fg:x="689" fg:w="5"/><text x="9.5886%" y="223.50"></text></g><g><title>operator new (3 samples, 0.04%)</title><rect x="9.4063%" y="229" width="0.0407%" height="15" fill="rgb(206,201,31)" fg:x="694" fg:w="3"/><text x="9.6563%" y="239.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="9.4063%" y="213" width="0.0407%" height="15" fill="rgb(231,57,52)" fg:x="694" fg:w="3"/><text x="9.6563%" y="223.50"></text></g><g><title>TCPReceiver::segment_received (225 samples, 3.05%)</title><rect x="6.5600%" y="245" width="3.0496%" height="15" fill="rgb(248,177,22)" fg:x="484" fg:w="225"/><text x="6.8100%" y="255.50">TCP..</text></g><g><title>unwrap (12 samples, 0.16%)</title><rect x="9.4470%" y="229" width="0.1626%" height="15" fill="rgb(215,211,37)" fg:x="697" fg:w="12"/><text x="9.6970%" y="239.50"></text></g><g><title>_mcount (11 samples, 0.15%)</title><rect x="9.4606%" y="213" width="0.1491%" height="15" fill="rgb(241,128,51)" fg:x="698" fg:w="11"/><text x="9.7106%" y="223.50"></text></g><g><title>[libc.so.6] (9 samples, 0.12%)</title><rect x="9.4877%" y="197" width="0.1220%" height="15" fill="rgb(227,165,31)" fg:x="700" fg:w="9"/><text x="9.7377%" y="207.50"></text></g><g><title>TCPSegment::length_in_sequence_space (3 samples, 0.04%)</title><rect x="9.6097%" y="245" width="0.0407%" height="15" fill="rgb(228,167,24)" fg:x="709" fg:w="3"/><text x="9.8597%" y="255.50"></text></g><g><title>_mcount (3 samples, 0.04%)</title><rect x="9.6097%" y="229" width="0.0407%" height="15" fill="rgb(228,143,12)" fg:x="709" fg:w="3"/><text x="9.8597%" y="239.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="9.6232%" y="213" width="0.0271%" height="15" fill="rgb(249,149,8)" fg:x="710" fg:w="2"/><text x="9.8732%" y="223.50"></text></g><g><title>TCPSegment::length_in_sequence_space (12 samples, 0.16%)</title><rect x="9.7045%" y="229" width="0.1626%" height="15" fill="rgb(243,35,44)" fg:x="716" fg:w="12"/><text x="9.9545%" y="239.50"></text></g><g><title>_mcount (11 samples, 0.15%)</title><rect x="9.7181%" y="213" width="0.1491%" height="15" fill="rgb(246,89,9)" fg:x="717" fg:w="11"/><text x="9.9681%" y="223.50"></text></g><g><title>[libc.so.6] (7 samples, 0.09%)</title><rect x="9.7723%" y="197" width="0.0949%" height="15" fill="rgb(233,213,13)" fg:x="721" fg:w="7"/><text x="10.0223%" y="207.50"></text></g><g><title>_mcount (11 samples, 0.15%)</title><rect x="9.8672%" y="229" width="0.1491%" height="15" fill="rgb(233,141,41)" fg:x="728" fg:w="11"/><text x="10.1172%" y="239.50"></text></g><g><title>[libc.so.6] (10 samples, 0.14%)</title><rect x="9.8807%" y="213" width="0.1355%" height="15" fill="rgb(239,167,4)" fg:x="729" fg:w="10"/><text x="10.1307%" y="223.50"></text></g><g><title>cfree (11 samples, 0.15%)</title><rect x="10.0163%" y="229" width="0.1491%" height="15" fill="rgb(209,217,16)" fg:x="739" fg:w="11"/><text x="10.2663%" y="239.50"></text></g><g><title>[libc.so.6] (9 samples, 0.12%)</title><rect x="10.0434%" y="213" width="0.1220%" height="15" fill="rgb(219,88,35)" fg:x="741" fg:w="9"/><text x="10.2934%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="10.1518%" y="197" width="0.0136%" height="15" fill="rgb(220,193,23)" fg:x="749" fg:w="1"/><text x="10.4018%" y="207.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (6 samples, 0.08%)</title><rect x="10.1654%" y="229" width="0.0813%" height="15" fill="rgb(230,90,52)" fg:x="750" fg:w="6"/><text x="10.4154%" y="239.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (1 samples, 0.01%)</title><rect x="10.2331%" y="213" width="0.0136%" height="15" fill="rgb(252,106,19)" fg:x="755" fg:w="1"/><text x="10.4831%" y="223.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (7 samples, 0.09%)</title><rect x="10.2467%" y="229" width="0.0949%" height="15" fill="rgb(206,74,20)" fg:x="756" fg:w="7"/><text x="10.4967%" y="239.50"></text></g><g><title>_mcount (6 samples, 0.08%)</title><rect x="10.2602%" y="213" width="0.0813%" height="15" fill="rgb(230,138,44)" fg:x="757" fg:w="6"/><text x="10.5102%" y="223.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="10.2602%" y="197" width="0.0813%" height="15" fill="rgb(235,182,43)" fg:x="757" fg:w="6"/><text x="10.5102%" y="207.50"></text></g><g><title>TCPSender::ack_received (55 samples, 0.75%)</title><rect x="9.6503%" y="245" width="0.7455%" height="15" fill="rgb(242,16,51)" fg:x="712" fg:w="55"/><text x="9.9003%" y="255.50"></text></g><g><title>unwrap (4 samples, 0.05%)</title><rect x="10.3416%" y="229" width="0.0542%" height="15" fill="rgb(248,9,4)" fg:x="763" fg:w="4"/><text x="10.5916%" y="239.50"></text></g><g><title>_mcount (4 samples, 0.05%)</title><rect x="10.3416%" y="213" width="0.0542%" height="15" fill="rgb(210,31,22)" fg:x="763" fg:w="4"/><text x="10.5916%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="10.3416%" y="197" width="0.0542%" height="15" fill="rgb(239,54,39)" fg:x="763" fg:w="4"/><text x="10.5916%" y="207.50"></text></g><g><title>TCPSender::bytes_in_flight (31 samples, 0.42%)</title><rect x="10.3958%" y="245" width="0.4202%" height="15" fill="rgb(230,99,41)" fg:x="767" fg:w="31"/><text x="10.6458%" y="255.50"></text></g><g><title>_mcount (28 samples, 0.38%)</title><rect x="10.4364%" y="229" width="0.3795%" height="15" fill="rgb(253,106,12)" fg:x="770" fg:w="28"/><text x="10.6864%" y="239.50"></text></g><g><title>[libc.so.6] (23 samples, 0.31%)</title><rect x="10.5042%" y="213" width="0.3117%" height="15" fill="rgb(213,46,41)" fg:x="775" fg:w="23"/><text x="10.7542%" y="223.50"></text></g><g><title>ByteStream::eof (6 samples, 0.08%)</title><rect x="11.0599%" y="229" width="0.0813%" height="15" fill="rgb(215,133,35)" fg:x="816" fg:w="6"/><text x="11.3099%" y="239.50"></text></g><g><title>_mcount (6 samples, 0.08%)</title><rect x="11.0599%" y="213" width="0.0813%" height="15" fill="rgb(213,28,5)" fg:x="816" fg:w="6"/><text x="11.3099%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="11.0870%" y="197" width="0.0542%" height="15" fill="rgb(215,77,49)" fg:x="818" fg:w="4"/><text x="11.3370%" y="207.50"></text></g><g><title>[libc.so.6] (8 samples, 0.11%)</title><rect x="11.2090%" y="197" width="0.1084%" height="15" fill="rgb(248,100,22)" fg:x="827" fg:w="8"/><text x="11.4590%" y="207.50"></text></g><g><title>_mcount (6 samples, 0.08%)</title><rect x="11.3174%" y="197" width="0.0813%" height="15" fill="rgb(208,67,9)" fg:x="835" fg:w="6"/><text x="11.5674%" y="207.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="11.3445%" y="181" width="0.0542%" height="15" fill="rgb(219,133,21)" fg:x="837" fg:w="4"/><text x="11.5945%" y="191.50"></text></g><g><title>cfree (7 samples, 0.09%)</title><rect x="11.3988%" y="197" width="0.0949%" height="15" fill="rgb(246,46,29)" fg:x="841" fg:w="7"/><text x="11.6488%" y="207.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="11.4123%" y="181" width="0.0813%" height="15" fill="rgb(246,185,52)" fg:x="842" fg:w="6"/><text x="11.6623%" y="191.50"></text></g><g><title>operator new (6 samples, 0.08%)</title><rect x="11.4936%" y="197" width="0.0813%" height="15" fill="rgb(252,136,11)" fg:x="848" fg:w="6"/><text x="11.7436%" y="207.50"></text></g><g><title>malloc (5 samples, 0.07%)</title><rect x="11.5072%" y="181" width="0.0678%" height="15" fill="rgb(219,138,53)" fg:x="849" fg:w="5"/><text x="11.7572%" y="191.50"></text></g><g><title>operator new (15 samples, 0.20%)</title><rect x="11.6292%" y="165" width="0.2033%" height="15" fill="rgb(211,51,23)" fg:x="858" fg:w="15"/><text x="11.8792%" y="175.50"></text></g><g><title>malloc (14 samples, 0.19%)</title><rect x="11.6427%" y="149" width="0.1898%" height="15" fill="rgb(247,221,28)" fg:x="859" fg:w="14"/><text x="11.8927%" y="159.50"></text></g><g><title>[libc.so.6] (13 samples, 0.18%)</title><rect x="11.6563%" y="133" width="0.1762%" height="15" fill="rgb(251,222,45)" fg:x="860" fg:w="13"/><text x="11.9063%" y="143.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="11.8325%" y="165" width="0.0136%" height="15" fill="rgb(217,162,53)" fg:x="873" fg:w="1"/><text x="12.0825%" y="175.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (312 samples, 4.23%)</title><rect x="11.5750%" y="197" width="4.2288%" height="15" fill="rgb(229,93,14)" fg:x="854" fg:w="312"/><text x="11.8250%" y="207.50">std::..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (312 samples, 4.23%)</title><rect x="11.5750%" y="181" width="4.2288%" height="15" fill="rgb(209,67,49)" fg:x="854" fg:w="312"/><text x="11.8250%" y="191.50">std::..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (292 samples, 3.96%)</title><rect x="11.8460%" y="165" width="3.9577%" height="15" fill="rgb(213,87,29)" fg:x="874" fg:w="292"/><text x="12.0960%" y="175.50">std:..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (292 samples, 3.96%)</title><rect x="11.8460%" y="149" width="3.9577%" height="15" fill="rgb(205,151,52)" fg:x="874" fg:w="292"/><text x="12.0960%" y="159.50">std:..</text></g><g><title>std::char_traits&lt;char&gt;::copy (292 samples, 3.96%)</title><rect x="11.8460%" y="133" width="3.9577%" height="15" fill="rgb(253,215,39)" fg:x="874" fg:w="292"/><text x="12.0960%" y="143.50">std:..</text></g><g><title>[libc.so.6] (292 samples, 3.96%)</title><rect x="11.8460%" y="117" width="3.9577%" height="15" fill="rgb(221,220,41)" fg:x="874" fg:w="292"/><text x="12.0960%" y="127.50">[lib..</text></g><g><title>ByteStream::peek_output[abi:cxx11] (340 samples, 4.61%)</title><rect x="11.2090%" y="213" width="4.6083%" height="15" fill="rgb(218,133,21)" fg:x="827" fg:w="340"/><text x="11.4590%" y="223.50">ByteS..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="15.8037%" y="197" width="0.0136%" height="15" fill="rgb(221,193,43)" fg:x="1166" fg:w="1"/><text x="16.0537%" y="207.50"></text></g><g><title>[libc.so.6] (635 samples, 8.61%)</title><rect x="15.9935%" y="197" width="8.6067%" height="15" fill="rgb(240,128,52)" fg:x="1180" fg:w="635"/><text x="16.2435%" y="207.50">[libc.so.6]</text></g><g><title>_mcount (8 samples, 0.11%)</title><rect x="24.6002%" y="197" width="0.1084%" height="15" fill="rgb(253,114,12)" fg:x="1815" fg:w="8"/><text x="24.8502%" y="207.50"></text></g><g><title>[libc.so.6] (7 samples, 0.09%)</title><rect x="24.6137%" y="181" width="0.0949%" height="15" fill="rgb(215,223,47)" fg:x="1816" fg:w="7"/><text x="24.8637%" y="191.50"></text></g><g><title>cfree (20 samples, 0.27%)</title><rect x="24.7086%" y="197" width="0.2711%" height="15" fill="rgb(248,225,23)" fg:x="1823" fg:w="20"/><text x="24.9586%" y="207.50"></text></g><g><title>[libc.so.6] (13 samples, 0.18%)</title><rect x="24.8035%" y="181" width="0.1762%" height="15" fill="rgb(250,108,0)" fg:x="1830" fg:w="13"/><text x="25.0535%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="24.9390%" y="165" width="0.0407%" height="15" fill="rgb(228,208,7)" fg:x="1840" fg:w="3"/><text x="25.1890%" y="175.50"></text></g><g><title>__default_morecore (2 samples, 0.03%)</title><rect x="24.9526%" y="149" width="0.0271%" height="15" fill="rgb(244,45,10)" fg:x="1841" fg:w="2"/><text x="25.2026%" y="159.50"></text></g><g><title>__sbrk (2 samples, 0.03%)</title><rect x="24.9526%" y="133" width="0.0271%" height="15" fill="rgb(207,125,25)" fg:x="1841" fg:w="2"/><text x="25.2026%" y="143.50"></text></g><g><title>brk (2 samples, 0.03%)</title><rect x="24.9526%" y="117" width="0.0271%" height="15" fill="rgb(210,195,18)" fg:x="1841" fg:w="2"/><text x="25.2026%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="24.9526%" y="101" width="0.0271%" height="15" fill="rgb(249,80,12)" fg:x="1841" fg:w="2"/><text x="25.2026%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="24.9526%" y="85" width="0.0271%" height="15" fill="rgb(221,65,9)" fg:x="1841" fg:w="2"/><text x="25.2026%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="24.9526%" y="69" width="0.0271%" height="15" fill="rgb(235,49,36)" fg:x="1841" fg:w="2"/><text x="25.2026%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.9661%" y="53" width="0.0136%" height="15" fill="rgb(225,32,20)" fg:x="1842" fg:w="1"/><text x="25.2161%" y="63.50"></text></g><g><title>operator delete (3 samples, 0.04%)</title><rect x="24.9797%" y="197" width="0.0407%" height="15" fill="rgb(215,141,46)" fg:x="1843" fg:w="3"/><text x="25.2297%" y="207.50"></text></g><g><title>ByteStream::pop_output (709 samples, 9.61%)</title><rect x="15.8173%" y="213" width="9.6097%" height="15" fill="rgb(250,160,47)" fg:x="1167" fg:w="709"/><text x="16.0673%" y="223.50">ByteStream::po..</text></g><g><title>operator new (30 samples, 0.41%)</title><rect x="25.0203%" y="197" width="0.4066%" height="15" fill="rgb(216,222,40)" fg:x="1846" fg:w="30"/><text x="25.2703%" y="207.50"></text></g><g><title>malloc (30 samples, 0.41%)</title><rect x="25.0203%" y="181" width="0.4066%" height="15" fill="rgb(234,217,39)" fg:x="1846" fg:w="30"/><text x="25.2703%" y="191.50"></text></g><g><title>[libc.so.6] (25 samples, 0.34%)</title><rect x="25.0881%" y="165" width="0.3388%" height="15" fill="rgb(207,178,40)" fg:x="1851" fg:w="25"/><text x="25.3381%" y="175.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="25.3863%" y="149" width="0.0407%" height="15" fill="rgb(221,136,13)" fg:x="1873" fg:w="3"/><text x="25.6363%" y="159.50"></text></g><g><title>[libc.so.6] (14 samples, 0.19%)</title><rect x="25.4269%" y="213" width="0.1898%" height="15" fill="rgb(249,199,10)" fg:x="1876" fg:w="14"/><text x="25.6769%" y="223.50"></text></g><g><title>_mcount (4 samples, 0.05%)</title><rect x="25.6167%" y="213" width="0.0542%" height="15" fill="rgb(249,222,13)" fg:x="1890" fg:w="4"/><text x="25.8667%" y="223.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="25.6303%" y="197" width="0.0407%" height="15" fill="rgb(244,185,38)" fg:x="1891" fg:w="3"/><text x="25.8803%" y="207.50"></text></g><g><title>cfree (6 samples, 0.08%)</title><rect x="25.6709%" y="213" width="0.0813%" height="15" fill="rgb(236,202,9)" fg:x="1894" fg:w="6"/><text x="25.9209%" y="223.50"></text></g><g><title>[libc.so.6] (5 samples, 0.07%)</title><rect x="25.6845%" y="197" width="0.0678%" height="15" fill="rgb(250,229,37)" fg:x="1895" fg:w="5"/><text x="25.9345%" y="207.50"></text></g><g><title>ByteStream::read[abi:cxx11] (1,107 samples, 15.00%)</title><rect x="11.1412%" y="229" width="15.0041%" height="15" fill="rgb(206,174,23)" fg:x="822" fg:w="1107"/><text x="11.3912%" y="239.50">ByteStream::read[abi:cx..</text></g><g><title>operator new (29 samples, 0.39%)</title><rect x="25.7522%" y="213" width="0.3931%" height="15" fill="rgb(211,33,43)" fg:x="1900" fg:w="29"/><text x="26.0022%" y="223.50"></text></g><g><title>malloc (28 samples, 0.38%)</title><rect x="25.7658%" y="197" width="0.3795%" height="15" fill="rgb(245,58,50)" fg:x="1901" fg:w="28"/><text x="26.0158%" y="207.50"></text></g><g><title>[libc.so.6] (24 samples, 0.33%)</title><rect x="25.8200%" y="181" width="0.3253%" height="15" fill="rgb(244,68,36)" fg:x="1905" fg:w="24"/><text x="26.0700%" y="191.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="26.1046%" y="165" width="0.0407%" height="15" fill="rgb(232,229,15)" fg:x="1926" fg:w="3"/><text x="26.3546%" y="175.50"></text></g><g><title>TCPSegment::length_in_sequence_space (10 samples, 0.14%)</title><rect x="26.1453%" y="229" width="0.1355%" height="15" fill="rgb(254,30,23)" fg:x="1929" fg:w="10"/><text x="26.3953%" y="239.50"></text></g><g><title>_mcount (9 samples, 0.12%)</title><rect x="26.1589%" y="213" width="0.1220%" height="15" fill="rgb(235,160,14)" fg:x="1930" fg:w="9"/><text x="26.4089%" y="223.50"></text></g><g><title>[libc.so.6] (8 samples, 0.11%)</title><rect x="26.1724%" y="197" width="0.1084%" height="15" fill="rgb(212,155,44)" fg:x="1931" fg:w="8"/><text x="26.4224%" y="207.50"></text></g><g><title>_mcount (25 samples, 0.34%)</title><rect x="26.2808%" y="229" width="0.3388%" height="15" fill="rgb(226,2,50)" fg:x="1939" fg:w="25"/><text x="26.5308%" y="239.50"></text></g><g><title>[libc.so.6] (19 samples, 0.26%)</title><rect x="26.3622%" y="213" width="0.2575%" height="15" fill="rgb(234,177,6)" fg:x="1945" fg:w="19"/><text x="26.6122%" y="223.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="26.6197%" y="229" width="0.0407%" height="15" fill="rgb(217,24,9)" fg:x="1964" fg:w="3"/><text x="26.8697%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="26.6468%" y="213" width="0.0136%" height="15" fill="rgb(220,13,46)" fg:x="1966" fg:w="1"/><text x="26.8968%" y="223.50"></text></g><g><title>operator new (20 samples, 0.27%)</title><rect x="26.6603%" y="229" width="0.2711%" height="15" fill="rgb(239,221,27)" fg:x="1967" fg:w="20"/><text x="26.9103%" y="239.50"></text></g><g><title>malloc (20 samples, 0.27%)</title><rect x="26.6603%" y="213" width="0.2711%" height="15" fill="rgb(222,198,25)" fg:x="1967" fg:w="20"/><text x="26.9103%" y="223.50"></text></g><g><title>[libc.so.6] (20 samples, 0.27%)</title><rect x="26.6603%" y="197" width="0.2711%" height="15" fill="rgb(211,99,13)" fg:x="1967" fg:w="20"/><text x="26.9103%" y="207.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="26.8772%" y="181" width="0.0542%" height="15" fill="rgb(232,111,31)" fg:x="1983" fg:w="4"/><text x="27.1272%" y="191.50"></text></g><g><title>_mcount (3 samples, 0.04%)</title><rect x="26.9450%" y="213" width="0.0407%" height="15" fill="rgb(245,82,37)" fg:x="1988" fg:w="3"/><text x="27.1950%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="26.9585%" y="197" width="0.0271%" height="15" fill="rgb(227,149,46)" fg:x="1989" fg:w="2"/><text x="27.2085%" y="207.50"></text></g><g><title>operator new (10 samples, 0.14%)</title><rect x="26.9856%" y="213" width="0.1355%" height="15" fill="rgb(218,36,50)" fg:x="1991" fg:w="10"/><text x="27.2356%" y="223.50"></text></g><g><title>malloc (10 samples, 0.14%)</title><rect x="26.9856%" y="197" width="0.1355%" height="15" fill="rgb(226,80,48)" fg:x="1991" fg:w="10"/><text x="27.2356%" y="207.50"></text></g><g><title>[libc.so.6] (9 samples, 0.12%)</title><rect x="26.9992%" y="181" width="0.1220%" height="15" fill="rgb(238,224,15)" fg:x="1992" fg:w="9"/><text x="27.2492%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.1076%" y="165" width="0.0136%" height="15" fill="rgb(241,136,10)" fg:x="2000" fg:w="1"/><text x="27.3576%" y="175.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, TCPSegment&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, TCPSegment&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, TCPSegment&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;unsigned long, TCPSegment&gt; &gt; (29 samples, 0.39%)</title><rect x="26.9314%" y="229" width="0.3931%" height="15" fill="rgb(208,32,45)" fg:x="1987" fg:w="29"/><text x="27.1814%" y="239.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (15 samples, 0.20%)</title><rect x="27.1212%" y="213" width="0.2033%" height="15" fill="rgb(207,135,9)" fg:x="2001" fg:w="15"/><text x="27.3712%" y="223.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.01%)</title><rect x="27.3109%" y="197" width="0.0136%" height="15" fill="rgb(206,86,44)" fg:x="2015" fg:w="1"/><text x="27.5609%" y="207.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (7 samples, 0.09%)</title><rect x="27.3245%" y="229" width="0.0949%" height="15" fill="rgb(245,177,15)" fg:x="2016" fg:w="7"/><text x="27.5745%" y="239.50"></text></g><g><title>_mcount (7 samples, 0.09%)</title><rect x="27.3245%" y="213" width="0.0949%" height="15" fill="rgb(206,64,50)" fg:x="2016" fg:w="7"/><text x="27.5745%" y="223.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="27.3380%" y="197" width="0.0813%" height="15" fill="rgb(234,36,40)" fg:x="2017" fg:w="6"/><text x="27.5880%" y="207.50"></text></g><g><title>std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (4 samples, 0.05%)</title><rect x="27.4194%" y="229" width="0.0542%" height="15" fill="rgb(213,64,8)" fg:x="2023" fg:w="4"/><text x="27.6694%" y="239.50"></text></g><g><title>_mcount (4 samples, 0.05%)</title><rect x="27.4194%" y="213" width="0.0542%" height="15" fill="rgb(210,75,36)" fg:x="2023" fg:w="4"/><text x="27.6694%" y="223.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="27.4329%" y="197" width="0.0407%" height="15" fill="rgb(229,88,21)" fg:x="2024" fg:w="3"/><text x="27.6829%" y="207.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="27.4736%" y="213" width="0.0136%" height="15" fill="rgb(252,204,47)" fg:x="2027" fg:w="1"/><text x="27.7236%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.4736%" y="197" width="0.0136%" height="15" fill="rgb(208,77,27)" fg:x="2027" fg:w="1"/><text x="27.7236%" y="207.50"></text></g><g><title>std::deque&lt;TCPSegment, std::allocator&lt;TCPSegment&gt; &gt;::_M_push_back_aux&lt;TCPSegment const&amp;&gt; (2 samples, 0.03%)</title><rect x="27.4736%" y="229" width="0.0271%" height="15" fill="rgb(221,76,26)" fg:x="2027" fg:w="2"/><text x="27.7236%" y="239.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="27.4871%" y="213" width="0.0136%" height="15" fill="rgb(225,139,18)" fg:x="2028" fg:w="1"/><text x="27.7371%" y="223.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="27.4871%" y="197" width="0.0136%" height="15" fill="rgb(230,137,11)" fg:x="2028" fg:w="1"/><text x="27.7371%" y="207.50"></text></g><g><title>TCPSender::fill_window (1,238 samples, 16.78%)</title><rect x="10.8159%" y="245" width="16.7796%" height="15" fill="rgb(212,28,1)" fg:x="798" fg:w="1238"/><text x="11.0659%" y="255.50">TCPSender::fill_window</text></g><g><title>wrap (7 samples, 0.09%)</title><rect x="27.5007%" y="229" width="0.0949%" height="15" fill="rgb(248,164,17)" fg:x="2029" fg:w="7"/><text x="27.7507%" y="239.50"></text></g><g><title>_mcount (6 samples, 0.08%)</title><rect x="27.5142%" y="213" width="0.0813%" height="15" fill="rgb(222,171,42)" fg:x="2030" fg:w="6"/><text x="27.7642%" y="223.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="27.5142%" y="197" width="0.0813%" height="15" fill="rgb(243,84,45)" fg:x="2030" fg:w="6"/><text x="27.7642%" y="207.50"></text></g><g><title>_mcount (2 samples, 0.03%)</title><rect x="27.6498%" y="229" width="0.0271%" height="15" fill="rgb(252,49,23)" fg:x="2040" fg:w="2"/><text x="27.8998%" y="239.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="27.6498%" y="213" width="0.0271%" height="15" fill="rgb(215,19,7)" fg:x="2040" fg:w="2"/><text x="27.8998%" y="223.50"></text></g><g><title>std::deque&lt;TCPSegment, std::allocator&lt;TCPSegment&gt; &gt;::_M_push_back_aux&lt;TCPSegment const&amp;&gt; (3 samples, 0.04%)</title><rect x="27.6769%" y="229" width="0.0407%" height="15" fill="rgb(238,81,41)" fg:x="2042" fg:w="3"/><text x="27.9269%" y="239.50"></text></g><g><title>operator new (2 samples, 0.03%)</title><rect x="27.6904%" y="213" width="0.0271%" height="15" fill="rgb(210,199,37)" fg:x="2043" fg:w="2"/><text x="27.9404%" y="223.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="27.7040%" y="197" width="0.0136%" height="15" fill="rgb(244,192,49)" fg:x="2044" fg:w="1"/><text x="27.9540%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.7040%" y="181" width="0.0136%" height="15" fill="rgb(226,211,11)" fg:x="2044" fg:w="1"/><text x="27.9540%" y="191.50"></text></g><g><title>TCPSender::send_empty_segment (14 samples, 0.19%)</title><rect x="27.5956%" y="245" width="0.1898%" height="15" fill="rgb(236,162,54)" fg:x="2036" fg:w="14"/><text x="27.8456%" y="255.50"></text></g><g><title>wrap (5 samples, 0.07%)</title><rect x="27.7175%" y="229" width="0.0678%" height="15" fill="rgb(220,229,9)" fg:x="2045" fg:w="5"/><text x="27.9675%" y="239.50"></text></g><g><title>_mcount (5 samples, 0.07%)</title><rect x="27.7175%" y="213" width="0.0678%" height="15" fill="rgb(250,87,22)" fg:x="2045" fg:w="5"/><text x="27.9675%" y="223.50"></text></g><g><title>[libc.so.6] (5 samples, 0.07%)</title><rect x="27.7175%" y="197" width="0.0678%" height="15" fill="rgb(239,43,17)" fg:x="2045" fg:w="5"/><text x="27.9675%" y="207.50"></text></g><g><title>TCPConnection::segment_received (1,600 samples, 21.69%)</title><rect x="6.1941%" y="261" width="21.6861%" height="15" fill="rgb(231,177,25)" fg:x="457" fg:w="1600"/><text x="6.4441%" y="271.50">TCPConnection::segment_received</text></g><g><title>_mcount (7 samples, 0.09%)</title><rect x="27.7853%" y="245" width="0.0949%" height="15" fill="rgb(219,179,1)" fg:x="2050" fg:w="7"/><text x="28.0353%" y="255.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="27.7989%" y="229" width="0.0813%" height="15" fill="rgb(238,219,53)" fg:x="2051" fg:w="6"/><text x="28.0489%" y="239.50"></text></g><g><title>ByteStream::eof (2 samples, 0.03%)</title><rect x="28.0564%" y="245" width="0.0271%" height="15" fill="rgb(232,167,36)" fg:x="2070" fg:w="2"/><text x="28.3064%" y="255.50"></text></g><g><title>_mcount (2 samples, 0.03%)</title><rect x="28.0564%" y="229" width="0.0271%" height="15" fill="rgb(244,19,51)" fg:x="2070" fg:w="2"/><text x="28.3064%" y="239.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="28.0564%" y="213" width="0.0271%" height="15" fill="rgb(224,6,22)" fg:x="2070" fg:w="2"/><text x="28.3064%" y="223.50"></text></g><g><title>ByteStream::input_ended (15 samples, 0.20%)</title><rect x="28.0835%" y="245" width="0.2033%" height="15" fill="rgb(224,145,5)" fg:x="2072" fg:w="15"/><text x="28.3335%" y="255.50"></text></g><g><title>_mcount (14 samples, 0.19%)</title><rect x="28.0970%" y="229" width="0.1898%" height="15" fill="rgb(234,130,49)" fg:x="2073" fg:w="14"/><text x="28.3470%" y="239.50"></text></g><g><title>[libc.so.6] (11 samples, 0.15%)</title><rect x="28.1377%" y="213" width="0.1491%" height="15" fill="rgb(254,6,2)" fg:x="2076" fg:w="11"/><text x="28.3877%" y="223.50"></text></g><g><title>ByteStream::bytes_written (16 samples, 0.22%)</title><rect x="28.5443%" y="229" width="0.2169%" height="15" fill="rgb(208,96,46)" fg:x="2106" fg:w="16"/><text x="28.7943%" y="239.50"></text></g><g><title>_mcount (16 samples, 0.22%)</title><rect x="28.5443%" y="213" width="0.2169%" height="15" fill="rgb(239,3,39)" fg:x="2106" fg:w="16"/><text x="28.7943%" y="223.50"></text></g><g><title>[libc.so.6] (13 samples, 0.18%)</title><rect x="28.5850%" y="197" width="0.1762%" height="15" fill="rgb(233,210,1)" fg:x="2109" fg:w="13"/><text x="28.8350%" y="207.50"></text></g><g><title>ByteStream::input_ended (16 samples, 0.22%)</title><rect x="28.7612%" y="229" width="0.2169%" height="15" fill="rgb(244,137,37)" fg:x="2122" fg:w="16"/><text x="29.0112%" y="239.50"></text></g><g><title>_mcount (15 samples, 0.20%)</title><rect x="28.7747%" y="213" width="0.2033%" height="15" fill="rgb(240,136,2)" fg:x="2123" fg:w="15"/><text x="29.0247%" y="223.50"></text></g><g><title>[libc.so.6] (13 samples, 0.18%)</title><rect x="28.8018%" y="197" width="0.1762%" height="15" fill="rgb(239,18,37)" fg:x="2125" fg:w="13"/><text x="29.0518%" y="207.50"></text></g><g><title>_mcount (8 samples, 0.11%)</title><rect x="28.9780%" y="229" width="0.1084%" height="15" fill="rgb(218,185,22)" fg:x="2138" fg:w="8"/><text x="29.2280%" y="239.50"></text></g><g><title>[libc.so.6] (7 samples, 0.09%)</title><rect x="28.9916%" y="213" width="0.0949%" height="15" fill="rgb(225,218,4)" fg:x="2139" fg:w="7"/><text x="29.2416%" y="223.50"></text></g><g><title>TCPReceiver::ackno (66 samples, 0.89%)</title><rect x="28.2868%" y="245" width="0.8946%" height="15" fill="rgb(230,182,32)" fg:x="2087" fg:w="66"/><text x="28.5368%" y="255.50"></text></g><g><title>wrap (7 samples, 0.09%)</title><rect x="29.0865%" y="229" width="0.0949%" height="15" fill="rgb(242,56,43)" fg:x="2146" fg:w="7"/><text x="29.3365%" y="239.50"></text></g><g><title>_mcount (7 samples, 0.09%)</title><rect x="29.0865%" y="213" width="0.0949%" height="15" fill="rgb(233,99,24)" fg:x="2146" fg:w="7"/><text x="29.3365%" y="223.50"></text></g><g><title>[libc.so.6] (6 samples, 0.08%)</title><rect x="29.1000%" y="197" width="0.0813%" height="15" fill="rgb(234,209,42)" fg:x="2147" fg:w="6"/><text x="29.3500%" y="207.50"></text></g><g><title>ByteStream::buffer_size (4 samples, 0.05%)</title><rect x="29.1813%" y="229" width="0.0542%" height="15" fill="rgb(227,7,12)" fg:x="2153" fg:w="4"/><text x="29.4313%" y="239.50"></text></g><g><title>_mcount (4 samples, 0.05%)</title><rect x="29.1813%" y="213" width="0.0542%" height="15" fill="rgb(245,203,43)" fg:x="2153" fg:w="4"/><text x="29.4313%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="29.1813%" y="197" width="0.0542%" height="15" fill="rgb(238,205,33)" fg:x="2153" fg:w="4"/><text x="29.4313%" y="207.50"></text></g><g><title>TCPReceiver::window_size (14 samples, 0.19%)</title><rect x="29.1813%" y="245" width="0.1898%" height="15" fill="rgb(231,56,7)" fg:x="2153" fg:w="14"/><text x="29.4313%" y="255.50"></text></g><g><title>_mcount (10 samples, 0.14%)</title><rect x="29.2356%" y="229" width="0.1355%" height="15" fill="rgb(244,186,29)" fg:x="2157" fg:w="10"/><text x="29.4856%" y="239.50"></text></g><g><title>[libc.so.6] (10 samples, 0.14%)</title><rect x="29.2356%" y="213" width="0.1355%" height="15" fill="rgb(234,111,31)" fg:x="2157" fg:w="10"/><text x="29.4856%" y="223.50"></text></g><g><title>_mcount (6 samples, 0.08%)</title><rect x="29.3711%" y="245" width="0.0813%" height="15" fill="rgb(241,149,10)" fg:x="2167" fg:w="6"/><text x="29.6211%" y="255.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="29.3982%" y="229" width="0.0542%" height="15" fill="rgb(249,206,44)" fg:x="2169" fg:w="4"/><text x="29.6482%" y="239.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="29.4524%" y="245" width="0.0136%" height="15" fill="rgb(251,153,30)" fg:x="2173" fg:w="1"/><text x="29.7024%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="29.4524%" y="229" width="0.0136%" height="15" fill="rgb(239,152,38)" fg:x="2173" fg:w="1"/><text x="29.7024%" y="239.50"></text></g><g><title>TCPConnection::send_segments (120 samples, 1.63%)</title><rect x="27.8802%" y="261" width="1.6265%" height="15" fill="rgb(249,139,47)" fg:x="2057" fg:w="120"/><text x="28.1302%" y="271.50"></text></g><g><title>std::deque&lt;TCPSegment, std::allocator&lt;TCPSegment&gt; &gt;::_M_push_back_aux&lt;TCPSegment const&amp;&gt; (3 samples, 0.04%)</title><rect x="29.4660%" y="245" width="0.0407%" height="15" fill="rgb(244,64,35)" fg:x="2174" fg:w="3"/><text x="29.7160%" y="255.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="29.4931%" y="229" width="0.0136%" height="15" fill="rgb(216,46,15)" fg:x="2176" fg:w="1"/><text x="29.7431%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="29.4931%" y="213" width="0.0136%" height="15" fill="rgb(250,74,19)" fg:x="2176" fg:w="1"/><text x="29.7431%" y="223.50"></text></g><g><title>_mcount (1 samples, 0.01%)</title><rect x="29.5066%" y="261" width="0.0136%" height="15" fill="rgb(249,42,33)" fg:x="2177" fg:w="1"/><text x="29.7566%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="29.5066%" y="245" width="0.0136%" height="15" fill="rgb(242,149,17)" fg:x="2177" fg:w="1"/><text x="29.7566%" y="255.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="29.5473%" y="245" width="0.0136%" height="15" fill="rgb(244,29,21)" fg:x="2180" fg:w="1"/><text x="29.7973%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="29.5473%" y="229" width="0.0136%" height="15" fill="rgb(220,130,37)" fg:x="2180" fg:w="1"/><text x="29.7973%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="29.5473%" y="213" width="0.0136%" height="15" fill="rgb(211,67,2)" fg:x="2180" fg:w="1"/><text x="29.7973%" y="223.50"></text></g><g><title>move_segments (1,733 samples, 23.49%)</title><rect x="6.0992%" y="277" width="23.4888%" height="15" fill="rgb(235,68,52)" fg:x="450" fg:w="1733"/><text x="6.3492%" y="287.50">move_segments</text></g><g><title>std::vector&lt;TCPSegment, std::allocator&lt;TCPSegment&gt; &gt;::_M_realloc_insert&lt;TCPSegment&gt; (5 samples, 0.07%)</title><rect x="29.5202%" y="261" width="0.0678%" height="15" fill="rgb(246,142,3)" fg:x="2178" fg:w="5"/><text x="29.7702%" y="271.50"></text></g><g><title>operator new (2 samples, 0.03%)</title><rect x="29.5609%" y="245" width="0.0271%" height="15" fill="rgb(241,25,7)" fg:x="2181" fg:w="2"/><text x="29.8109%" y="255.50"></text></g><g><title>malloc (2 samples, 0.03%)</title><rect x="29.5609%" y="229" width="0.0271%" height="15" fill="rgb(242,119,39)" fg:x="2181" fg:w="2"/><text x="29.8109%" y="239.50"></text></g><g><title>[libc.so.6] (2 samples, 0.03%)</title><rect x="29.5609%" y="213" width="0.0271%" height="15" fill="rgb(241,98,45)" fg:x="2181" fg:w="2"/><text x="29.8109%" y="223.50"></text></g><g><title>main_loop (1,909 samples, 25.87%)</title><rect x="4.0661%" y="293" width="25.8742%" height="15" fill="rgb(254,28,30)" fg:x="300" fg:w="1909"/><text x="4.3161%" y="303.50">main_loop</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (26 samples, 0.35%)</title><rect x="29.5880%" y="277" width="0.3524%" height="15" fill="rgb(241,142,54)" fg:x="2183" fg:w="26"/><text x="29.8380%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (26 samples, 0.35%)</title><rect x="29.5880%" y="261" width="0.3524%" height="15" fill="rgb(222,85,15)" fg:x="2183" fg:w="26"/><text x="29.8380%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (26 samples, 0.35%)</title><rect x="29.5880%" y="245" width="0.3524%" height="15" fill="rgb(210,85,47)" fg:x="2183" fg:w="26"/><text x="29.8380%" y="255.50"></text></g><g><title>std::char_traits&lt;char&gt;::copy (26 samples, 0.35%)</title><rect x="29.5880%" y="229" width="0.3524%" height="15" fill="rgb(224,206,25)" fg:x="2183" fg:w="26"/><text x="29.8380%" y="239.50"></text></g><g><title>[libc.so.6] (26 samples, 0.35%)</title><rect x="29.5880%" y="213" width="0.3524%" height="15" fill="rgb(243,201,19)" fg:x="2183" fg:w="26"/><text x="29.8380%" y="223.50"></text></g><g><title>[unknown] (21 samples, 0.28%)</title><rect x="29.6557%" y="197" width="0.2846%" height="15" fill="rgb(236,59,4)" fg:x="2188" fg:w="21"/><text x="29.9057%" y="207.50"></text></g><g><title>[unknown] (14 samples, 0.19%)</title><rect x="29.7506%" y="181" width="0.1898%" height="15" fill="rgb(254,179,45)" fg:x="2195" fg:w="14"/><text x="30.0006%" y="191.50"></text></g><g><title>[unknown] (13 samples, 0.18%)</title><rect x="29.7642%" y="165" width="0.1762%" height="15" fill="rgb(226,14,10)" fg:x="2196" fg:w="13"/><text x="30.0142%" y="175.50"></text></g><g><title>[unknown] (9 samples, 0.12%)</title><rect x="29.8184%" y="149" width="0.1220%" height="15" fill="rgb(244,27,41)" fg:x="2200" fg:w="9"/><text x="30.0684%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="29.9133%" y="133" width="0.0271%" height="15" fill="rgb(235,35,32)" fg:x="2207" fg:w="2"/><text x="30.1633%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.7758%" y="261" width="0.0136%" height="15" fill="rgb(218,68,31)" fg:x="6845" fg:w="1"/><text x="93.0258%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.7758%" y="245" width="0.0136%" height="15" fill="rgb(207,120,37)" fg:x="6845" fg:w="1"/><text x="93.0258%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="92.7894%" y="261" width="0.0542%" height="15" fill="rgb(227,98,0)" fg:x="6846" fg:w="4"/><text x="93.0394%" y="271.50"></text></g><g><title>rand (5,022 samples, 68.07%)</title><rect x="29.9404%" y="293" width="68.0672%" height="15" fill="rgb(207,7,3)" fg:x="2209" fg:w="5022"/><text x="30.1904%" y="303.50">rand</text></g><g><title>random (4,946 samples, 67.04%)</title><rect x="30.9705%" y="277" width="67.0371%" height="15" fill="rgb(206,98,19)" fg:x="2285" fg:w="4946"/><text x="31.2205%" y="287.50">random</text></g><g><title>random_r (381 samples, 5.16%)</title><rect x="92.8436%" y="261" width="5.1640%" height="15" fill="rgb(217,5,26)" fg:x="6850" fg:w="381"/><text x="93.0936%" y="271.50">random..</text></g><g><title>rand@plt (74 samples, 1.00%)</title><rect x="98.0076%" y="293" width="1.0030%" height="15" fill="rgb(235,190,38)" fg:x="7231" fg:w="74"/><text x="98.2576%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="98.9835%" y="277" width="0.0271%" height="15" fill="rgb(247,86,24)" fg:x="7303" fg:w="2"/><text x="99.2335%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.9970%" y="261" width="0.0136%" height="15" fill="rgb(205,101,16)" fg:x="7304" fg:w="1"/><text x="99.2470%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.9970%" y="245" width="0.0136%" height="15" fill="rgb(246,168,33)" fg:x="7304" fg:w="1"/><text x="99.2470%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.9970%" y="229" width="0.0136%" height="15" fill="rgb(231,114,1)" fg:x="7304" fg:w="1"/><text x="99.2470%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.9970%" y="213" width="0.0136%" height="15" fill="rgb(207,184,53)" fg:x="7304" fg:w="1"/><text x="99.2470%" y="223.50"></text></g><g><title>all (7,378 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="7378"/><text x="0.2500%" y="415.50"></text></g><g><title>tcp_benchmark (7,378 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(212,188,45)" fg:x="0" fg:w="7378"/><text x="0.2500%" y="399.50">tcp_benchmark</text></g><g><title>_start (7,351 samples, 99.63%)</title><rect x="0.3660%" y="373" width="99.6340%" height="15" fill="rgb(223,154,38)" fg:x="27" fg:w="7351"/><text x="0.6160%" y="383.50">_start</text></g><g><title>__libc_start_main (7,351 samples, 99.63%)</title><rect x="0.3660%" y="357" width="99.6340%" height="15" fill="rgb(251,22,52)" fg:x="27" fg:w="7351"/><text x="0.6160%" y="367.50">__libc_start_main</text></g><g><title>[libc.so.6] (7,351 samples, 99.63%)</title><rect x="0.3660%" y="341" width="99.6340%" height="15" fill="rgb(229,209,22)" fg:x="27" fg:w="7351"/><text x="0.6160%" y="351.50">[libc.so.6]</text></g><g><title>main (7,351 samples, 99.63%)</title><rect x="0.3660%" y="325" width="99.6340%" height="15" fill="rgb(234,138,34)" fg:x="27" fg:w="7351"/><text x="0.6160%" y="335.50">main</text></g><g><title>main_loop (7,351 samples, 99.63%)</title><rect x="0.3660%" y="309" width="99.6340%" height="15" fill="rgb(212,95,11)" fg:x="27" fg:w="7351"/><text x="0.6160%" y="319.50">main_loop</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (73 samples, 0.99%)</title><rect x="99.0106%" y="293" width="0.9894%" height="15" fill="rgb(240,179,47)" fg:x="7305" fg:w="73"/><text x="99.2606%" y="303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (73 samples, 0.99%)</title><rect x="99.0106%" y="277" width="0.9894%" height="15" fill="rgb(240,163,11)" fg:x="7305" fg:w="73"/><text x="99.2606%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (73 samples, 0.99%)</title><rect x="99.0106%" y="261" width="0.9894%" height="15" fill="rgb(236,37,12)" fg:x="7305" fg:w="73"/><text x="99.2606%" y="271.50"></text></g><g><title>std::char_traits&lt;char&gt;::assign (73 samples, 0.99%)</title><rect x="99.0106%" y="245" width="0.9894%" height="15" fill="rgb(232,164,16)" fg:x="7305" fg:w="73"/><text x="99.2606%" y="255.50"></text></g><g><title>[libc.so.6] (73 samples, 0.99%)</title><rect x="99.0106%" y="229" width="0.9894%" height="15" fill="rgb(244,205,15)" fg:x="7305" fg:w="73"/><text x="99.2606%" y="239.50"></text></g><g><title>[unknown] (49 samples, 0.66%)</title><rect x="99.3359%" y="213" width="0.6641%" height="15" fill="rgb(223,117,47)" fg:x="7329" fg:w="49"/><text x="99.5859%" y="223.50"></text></g><g><title>[unknown] (30 samples, 0.41%)</title><rect x="99.5934%" y="197" width="0.4066%" height="15" fill="rgb(244,107,35)" fg:x="7348" fg:w="30"/><text x="99.8434%" y="207.50"></text></g><g><title>[unknown] (25 samples, 0.34%)</title><rect x="99.6612%" y="181" width="0.3388%" height="15" fill="rgb(205,140,8)" fg:x="7353" fg:w="25"/><text x="99.9112%" y="191.50"></text></g><g><title>[unknown] (23 samples, 0.31%)</title><rect x="99.6883%" y="165" width="0.3117%" height="15" fill="rgb(228,84,46)" fg:x="7355" fg:w="23"/><text x="99.9383%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.08%)</title><rect x="99.9187%" y="149" width="0.0813%" height="15" fill="rgb(254,188,9)" fg:x="7372" fg:w="6"/><text x="100.1687%" y="159.50"></text></g></svg></svg>